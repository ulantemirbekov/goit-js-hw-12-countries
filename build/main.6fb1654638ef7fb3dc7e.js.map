{"version":3,"sources":["webpack:///./refs/refs.js","webpack:///./components/fetchCountries.js","webpack:///./components/create-markup.js","webpack:///./index.js"],"names":["refs","input","document","querySelector","container","fetchCountries","searchQuery","fetch","then","data","json","catch","error","console","log","clearMarkup","innerHTML","defaultModules","set","PNotifyMobile","addEventListener","_","value","dataHandler","country","markup","length","name","region","population","capital","languages","reduce","acc","language","flag","li","updateMarkup","dataLength","text","delay"],"mappings":"mJAAaA,EAAO,CAChBC,MAAOC,SAASC,cAAc,kBAC9BC,UAAWF,SAASC,cAAc,eCGvBE,G,oBALQ,SAACC,GACpB,OAAOC,MAAM,yCAAyCD,GACjDE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QCiCvBG,G,oBAAc,WACvBf,EAAKI,UAAUY,UAAY,K,wDC3B/BC,iBAAeC,IAAIC,EAAe,IAGlCnB,EAAKC,MAAMmB,iBACP,QACAC,YAAW,WACHrB,EAAKC,MAAMqB,MACXjB,EAAeL,EAAKC,MAAMqB,OACrBd,MAAK,SAAAC,GAAI,OAAIc,EAAYd,MACzBD,MAAK,SAAAC,GAAI,ODoBE,SAAAA,GACxB,IAtCkBe,EAsCZC,EArCiB,KADLD,EAsCUf,GArChBiB,OAEJ,6BAA6BF,EAAQ,GAAGG,KAAxC,8IAGgCH,EAAQ,GAAGI,OAH3C,yDAIoCJ,EAAQ,GAAGK,WAJ/C,oDAKiCL,EAAQ,GAAGM,QAL5C,2FAQAN,EAAQ,GAAGO,UAAUC,QAAO,SAACC,EAAKC,GAE9B,OADAD,GAAO,OAAOC,EAASP,KAApB,UAEJ,IAXH,wEAcwBH,EAAQ,GAAGW,KAdnC,UAciDX,EAAQ,GAAGG,KAd5D,iDAkBGH,EAAQE,QAAU,GAErB,mBAEAF,EAAQQ,QAAO,SAACC,EAAKG,GAEjB,OADAH,GAAO,OAAOG,EAAGT,KAAd,UAEJ,IALH,mBAFD,EAkBP3B,EAAKI,UAAUY,UAAYS,ECtBDY,CAAa5B,MAC1BE,OAAM,WACHI,OAELA,MACR,MAGP,IAAMQ,EAAc,SAAAd,GAChB,IAAM6B,EAAa7B,EAAKiB,OACxB,GAAIY,EAAa,GACbvB,IACAH,gBAAM,CACF2B,KACI,+DACJC,MAAO,UAER,IAAIF,GAAc,GAAKA,GAAc,GACxC,OAAO7B,EAEPM,IACAH,gBAAM,CACF2B,KAAM,mBACNC,MAAO,U","file":"main.6fb1654638ef7fb3dc7e.js","sourcesContent":["export const refs = {\r\n    input: document.querySelector('.country-input'),\r\n    container: document.querySelector('.container'),\r\n};","const fetchCountries = (searchQuery) => {\r\n    return fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`)\r\n        .then(data => data.json())\r\n        .catch(error => console.log(error));\r\n};\r\nexport default fetchCountries;","import { refs } from '../refs/refs.js';\r\n\r\nconst createMarkup = (country) => {\r\n    if (country.length === 1) {\r\n        const markup =\r\n            `<h2 class=\"country-title\">${country[0].name}</h2>\r\n                <div class=\"content\">\r\n                    <div class=\"text-content\">   \r\n                        <p><b>Region: </b>${country[0].region}</p>  \r\n                        <p><b>Population: </b>${country[0].population}</p>\r\n                        <p><b>Capital: </b>${country[0].capital}</p>\r\n                        <p><b>Languages:</b></p>\r\n                            <ul>`+\r\n            country[0].languages.reduce((acc, language) => {\r\n                acc += `<li>${language.name}</li>`;\r\n                return acc;\r\n            }, '') +\r\n            `</ul>\r\n                    </div>\r\n                        <img src=\"${country[0].flag}\" alt=\"${country[0].name}'s flag\" width=\"300\">\r\n                </div>`;\r\n\r\n        return markup;\r\n    } else if (country.length <= 10) {\r\n        const markup =\r\n            `\r\n          <ul>` +\r\n            country.reduce((acc, li) => {\r\n                acc += `<li>${li.name}</li>`;\r\n                return acc;\r\n            }, '') +\r\n            `</ul>\r\n    `;\r\n        return markup;\r\n    }\r\n};\r\nexport const clearMarkup = () => {\r\n    refs.container.innerHTML = '';\r\n};\r\nexport const updateMarkup = data => {\r\n    const markup = createMarkup(data);\r\n    refs.container.innerHTML = markup;\r\n};","import './styles.css';\r\nimport * as _ from 'lodash';\r\nimport { refs } from './refs/refs.js';\r\nimport fetchCountries from './components/fetchCountries.js';\r\nimport { clearMarkup, updateMarkup } from './components/create-markup.js';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\r\nimport { error, defaultModules } from '@pnotify/core/dist/PNotify';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\n\r\nrefs.input.addEventListener(\r\n    'input',\r\n    _.debounce(() => {\r\n        if (refs.input.value) {\r\n            fetchCountries(refs.input.value)\r\n                .then(data => dataHandler(data))\r\n                .then(data => updateMarkup(data))\r\n                .catch(() => {\r\n                    clearMarkup();\r\n                });\r\n        } else clearMarkup();\r\n    }, 500),\r\n);\r\n\r\nconst dataHandler = data => {\r\n    const dataLength = data.length;\r\n    if (dataLength > 10) {\r\n        clearMarkup();\r\n        error({\r\n            text:\r\n                'Too many matches found. Please, enter a more specific query!',\r\n            delay: 3000,\r\n        });\r\n    } else if (dataLength >= 1 && dataLength <= 10) {\r\n        return data;\r\n    } else {\r\n        clearMarkup();\r\n        error({\r\n            text: 'No matches found',\r\n            delay: 3000,\r\n        });\r\n    };\r\n};\r\n\r\n"],"sourceRoot":""}